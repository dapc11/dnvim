-- rosewater = "#f4dbd6",
-- flamingo = "#f0c6c6",
-- pink = "#f5bde6",
-- mauve = "#c6a0f6",
-- red = "#ed8796",
-- maroon = "#ee99a0",
-- peach = "#f5a97f",
-- yellow = "#eed49f",
-- green = "#a6da95",
-- teal = "#8bd5ca",
-- sky = "#91d7e3",
-- sapphire = "#7dc4e4",
-- blue = "#8aadf4",
-- lavender = "#b7bdf8",
-- text = "#cad3f5",
-- subtext1 = "#b8c0e0",
-- subtext0 = "#a5adcb",
-- overlay2 = "#939ab7",
-- overlay1 = "#8087a2",
-- overlay0 = "#6e738d",
-- surface2 = "#5b6078",
-- surface1 = "#494d64",
-- surface0 = "#363a4f",
-- base = "#24273a",
-- mantle = "#1e2030",
-- crust = "#181926",

return {
  "catppuccin/nvim",
  enabled = true,
  name = "catppuccin",
  priority = 1000,
  config = function()
    require("catppuccin").setup({
      term_colors = true,
      color_overrides = {
        macchiato = {
          crust = "#1a1f24",
          mantle = "#1f242a",
          base = "#24292e",
          surface0 = "#2d333a",
          surface1 = "#363d46",
          surface2 = "#3f4752",
          overlay0 = "#48505e",
          overlay1 = "#525a6a",
          overlay2 = "#5c6476",
          subtext0 = "#666e82",
          subtext1 = "#70788e",
        },
      },
      highlight_overrides = {
        macchiato = function(colors)
          return {
            LineNr = { fg = colors.text },
            CursorLineNr = { fg = colors.text, bg = colors.surface0 },
            WinSeparator = { fg = colors.surface0, bg = colors.surface0 },
            -- Syntax
            -- Constant = { fg = colors.blue },
            -- String = { fg = colors.text },
            -- ["@variable.parameter"] = { fg = colors.text },
            -- ["@property"] = { fg = colors.blue },
            -- Variable = { fg = colors.text },
            -- Character = { fg = colors.subtext0 },
            -- Number = { fg = colors.blue },
            -- Boolean = { fg = colors.blue },
            -- Float = { fg = colors.blue },
            -- Identifier = { fg = colors.green },
            -- Function = { fg = colors.green },
            -- Statement = { fg = colors.green },
            -- Conditional = { fg = colors.green },
            Comment = { fg = colors.peach },
            -- Repeat = { fg = colors.green },
            -- Label = { fg = colors.green },
            -- Operator = { fg = colors.subtext0 },
            -- Keyword = { fg = colors.green },
            -- Exception = { fg = colors.green },
            -- PreProc = { fg = colors.yellow },
            -- Include = { fg = colors.yellow },
            -- Define = { fg = colors.yellow },
            -- Macro = { fg = colors.yellow },
            -- PreCondit = { fg = colors.yellow },
            -- Type = { fg = colors.blue },
            -- StorageClass = { fg = colors.overlay2 },
            -- Structure = { fg = colors.subtext0 },
            -- Special = { fg = colors.overlay2 },
            -- SpecialChar = { fg = colors.overlay2 },
            -- FZF
            FzfLuaNormal = { bg = colors.base },
            FzfLuaBorder = { fg = colors.base, bg = colors.base },
            FzfluaTitle = { fg = colors.text, bg = colors.overlay0, style = { "bold" } },
            FzfLuaTitleFlags = { fg = colors.text },
            FzfLuaBackdrop = { bg = colors.surface0 },
            FzfLuaPreviewNormal = { bg = colors.surface0 },
            FzfLuaPreviewBorder = { fg = colors.surface0, bg = colors.surface0 },
            FzfLuaPreviewTitle = { fg = colors.text, bg = colors.overlay0, style = { "bold" } },
            FzfLuaScrollBorderEmpty = { fg = colors.surface0, bg = colors.surface0 },
            FzfLuaScrollBorderFull = { fg = colors.subtext1, bg = colors.surface0 },
            FzfLuaScrollFloatEmpty = { fg = colors.surface0, bg = colors.surface0 },
            FzfLuaScrollFloatFull = { fg = colors.subtext1, bg = colors.surface0 },
            FzfLuaCursorLine = { bg = colors.surface2 },
            FzfLuaLivePrompt = { fg = colors.red },

            Boolean = { fg = colors.mauve },
            Number = { fg = colors.mauve },
            Float = { fg = colors.mauve },

            PreProc = { fg = colors.mauve },
            PreCondit = { fg = colors.mauve },
            Include = { fg = colors.mauve },
            Define = { fg = colors.mauve },
            Conditional = { fg = colors.yellow },
            Repeat = { fg = colors.yellow },
            Keyword = { fg = colors.yellow },
            Typedef = { fg = colors.yellow },
            Exception = { fg = colors.yellow },
            Statement = { fg = colors.yellow },

            Error = { fg = colors.red },
            StorageClass = { fg = colors.peach },
            Tag = { fg = colors.peach },
            Label = { fg = colors.peach },
            Structure = { fg = colors.peach },
            Operator = { fg = colors.peach },
            Title = { fg = colors.peach },
            Special = { fg = colors.yellow },
            SpecialChar = { fg = colors.yellow },
            Type = { fg = colors.yellow, style = { "bold" } },
            Function = { fg = colors.green, style = { "bold" } },
            Delimiter = { fg = colors.text },
            Ignore = { fg = colors.subtext2 },
            Macro = { fg = colors.teal },
            DiagnosticUnnecessary = { fg = colors.overlay2 },
            DiagnosticUnderlineWarn = { style = {} },
            DiagnosticUnderlineError = { style = {} },
            DiagnosticUnderlineHint = { style = {} },
            DiagnosticUnderlineInfo = { style = {} },
            DiagnosticUnderlineOk = { style = {} },

            TSAnnotation = { fg = colors.mauve },
            TSAttribute = { fg = colors.mauve },
            TSBoolean = { fg = colors.mauve },
            TSCharacter = { fg = colors.teal },
            TSCharacterSpecial = { link = "SpecialChar" },
            TSComment = { fg = colors.peach },
            TSConditional = { fg = colors.red },
            TSConstBuiltin = { fg = colors.mauve },
            TSConstMacro = { fg = colors.mauve },
            TSConstant = { fg = colors.text },
            TSConstructor = { fg = colors.green },
            TSDebug = { link = "Debug" },
            TSDefine = { link = "Define" },
            TSEnvironment = { link = "Macro" },
            TSEnvironmentName = { link = "Type" },
            TSError = { link = "Error" },
            TSException = { fg = colors.red },
            TSField = { fg = colors.blue },
            TSFloat = { fg = colors.mauve },
            TSFuncBuiltin = { fg = colors.green },
            TSFuncMacro = { fg = colors.green },
            TSFunction = { fg = colors.green },
            TSFunctionCall = { fg = colors.green },
            TSInclude = { fg = colors.red },
            TSKeyword = { fg = colors.red },
            TSKeywordFunction = { fg = colors.yellow },
            TSKeywordOperator = { fg = colors.peach },
            TSKeywordReturn = { fg = colors.red },
            TSLabel = { fg = colors.peach },
            TSLiteral = { link = "String" },
            TSMath = { fg = colors.blue },
            TSMethod = { fg = colors.green },
            TSMethodCall = { fg = colors.green },
            TSNamespace = { fg = colors.yellow },
            TSNone = { fg = colors.text },
            TSNumber = { fg = colors.mauve },
            TSOperator = { fg = colors.peach },
            TSParameter = { fg = colors.text },
            TSParameterReference = { fg = colors.text },
            TSPreProc = { link = "PreProc" },
            TSProperty = { fg = colors.blue },
            TSPunctBracket = { fg = colors.text },
            TSPunctDelimiter = { fg = colors.text },
            TSPunctSpecial = { fg = colors.blue },
            TSRepeat = { fg = colors.red },
            TSStorageClass = { fg = colors.peach },
            TSStorageClassLifetime = { fg = colors.peach },
            TSStrike = { fg = colors.subtext2 },
            TSString = { fg = colors.teal },
            TSStringEscape = { fg = colors.green },
            TSStringRegex = { fg = colors.green },
            TSStringSpecial = { link = "SpecialChar" },
            TSSymbol = { fg = colors.text },
            TSTag = { fg = colors.peach },
            TSTagAttribute = { fg = colors.green },
            TSTagDelimiter = { fg = colors.green },
            TSText = { fg = colors.green },
            TSTextReference = { link = "Constant" },
            TSTitle = { link = "Title" },
            TSTodo = { link = "Todo" },
            TSType = { fg = colors.yellow, style = { "bold" } },
            TSTypeBuiltin = { fg = colors.yellow, style = { "bold" } },
            TSTypeDefinition = { fg = colors.yellow, style = { "bold" } },
            TSTypeQualifier = { fg = colors.peach, style = { "bold" } },
            TSURI = { fg = colors.blue },
            TSVariable = { fg = colors.text },
            TSVariableBuiltin = { fg = colors.mauve },

            ["@annotation"] = { link = "TSAnnotation" },
            ["@attribute"] = { link = "TSAttribute" },
            ["@boolean"] = { link = "TSBoolean" },
            ["@character"] = { link = "TSCharacter" },
            ["@character.special"] = { link = "TSCharacterSpecial" },
            ["@comment"] = { fg = colors.peach },
            ["@conceal"] = { link = "Grey" },
            ["@conditional"] = { link = "TSConditional" },
            ["@constant"] = { link = "TSConstant" },
            ["@constant.builtin"] = { link = "TSConstBuiltin" },
            ["@constant.macro"] = { link = "TSConstMacro" },
            ["@constructor"] = { link = "TSConstructor" },
            ["@debug"] = { link = "TSDebug" },
            ["@define"] = { link = "TSDefine" },
            ["@error"] = { link = "TSError" },
            ["@exception"] = { link = "TSException" },
            ["@field"] = { link = "TSField" },
            ["@float"] = { link = "TSFloat" },
            ["@function"] = { link = "TSFunction" },
            ["@function.builtin"] = { link = "TSFuncBuiltin" },
            ["@function.call"] = { link = "TSFunctionCall" },
            ["@function.macro"] = { link = "TSFuncMacro" },
            ["@include"] = { link = "TSInclude" },
            ["@keyword"] = { link = "TSKeyword" },
            ["@keyword.function"] = { link = "TSKeywordFunction" },
            ["@keyword.operator"] = { link = "TSKeywordOperator" },
            ["@keyword.return"] = { link = "TSKeywordReturn" },
            ["@label"] = { link = "TSLabel" },
            ["@math"] = { link = "TSMath" },
            ["@method"] = { link = "TSMethod" },
            ["@method.call"] = { link = "TSMethodCall" },
            ["@namespace"] = { link = "TSNamespace" },
            ["@none"] = { link = "TSNone" },
            ["@number"] = { link = "TSNumber" },
            ["@operator"] = { link = "TSOperator" },
            ["@parameter"] = { link = "TSParameter" },
            ["@parameter.reference"] = { link = "TSParameterReference" },
            ["@preproc"] = { link = "TSPreProc" },
            ["@property"] = { link = "TSProperty" },
            ["@punctuation.bracket"] = { link = "TSPunctBracket" },
            ["@punctuation.delimiter"] = { fg = colors.text },
            ["@punctuation.special"] = { link = "TSPunctSpecial" },
            ["@repeat"] = { link = "TSRepeat" },
            ["@storageclass"] = { link = "TSStorageClass" },
            ["@storageclass.lifetime"] = { link = "TSStorageClassLifetime" },
            ["@strike"] = { link = "TSStrike" },
            ["@string"] = { link = "TSString" },
            ["@string.escape"] = { link = "TSStringEscape" },
            ["@string.regex"] = { link = "TSStringRegex" },
            ["@string.special"] = { link = "TSStringSpecial" },
            ["@symbol"] = { link = "TSSymbol" },
            ["@tag"] = { link = "TSTag" },
            ["@tag.attribute"] = { link = "TSTagAttribute" },
            ["@tag.delimiter"] = { link = "TSTagDelimiter" },
            ["@text"] = { link = "TSText" },
            ["@text.danger"] = { link = "TSDanger" },
            ["@text.diff.add"] = { link = "diffAdded" },
            ["@text.diff.delete"] = { link = "diffRemoved" },
            ["@text.emphasis"] = { link = "TSEmphasis" },
            ["@text.environment"] = { link = "TSEnvironment" },
            ["@text.environment.name"] = { link = "TSEnvironmentName" },
            ["@text.literal"] = { link = "TSLiteral" },
            ["@text.math"] = { link = "TSMath" },
            ["@text.note"] = { link = "TSNote" },
            ["@text.reference"] = { link = "TSTextReference" },
            ["@text.strike"] = { link = "TSStrike" },
            ["@text.strong"] = { link = "TSStrong" },
            ["@text.title"] = { link = "TSTitle" },
            ["@text.todo"] = { link = "TSTodo" },
            ["@text.todo.checked"] = { link = "Green" },
            ["@text.todo.unchecked"] = { link = "Ignore" },
            ["@text.underline"] = { link = "TSUnderline" },
            ["@text.uri"] = { link = "TSURI" },
            ["@text.warning"] = { link = "TSWarning" },
            ["@todo"] = { link = "TSTodo" },
            ["@type"] = { link = "TSType" },
            ["@type.builtin"] = { link = "TSTypeBuiltin" },
            ["@type.definition"] = { link = "TSTypeDefinition" },
            ["@type.qualifier"] = { link = "TSTypeQualifier" },
            ["@uri"] = { link = "TSURI" },
            ["@variable"] = { link = "TSVariable" },
            ["@variable.builtin"] = { link = "TSVariableBuiltin" },
            ["@variable.parameter"] = { link = "TSParameter" },

            ["@lsp.type.class"] = { link = "TSType" },
            ["@lsp.type.comment"] = { link = "TSComment" },
            ["@lsp.type.decorator"] = { link = "TSFunction" },
            ["@lsp.type.enum"] = { link = "TSType" },
            ["@lsp.type.enumMember"] = { link = "TSProperty" },
            ["@lsp.type.events"] = { link = "TSLabel" },
            ["@lsp.type.function"] = { link = "TSFunction" },
            ["@lsp.type.interface"] = { link = "TSType" },
            ["@lsp.type.keyword"] = { link = "TSKeyword" },
            ["@lsp.type.macro"] = { link = "TSConstMacro" },
            ["@lsp.type.method"] = { link = "TSMethod" },
            ["@lsp.type.modifier"] = { link = "TSTypeQualifier" },
            ["@lsp.type.namespace"] = { link = "TSNamespace" },
            ["@lsp.type.number"] = { link = "TSNumber" },
            ["@lsp.type.operator"] = { link = "TSOperator" },
            ["@lsp.type.parameter"] = { link = "TSParameter" },
            ["@lsp.type.property"] = { link = "TSProperty" },
            ["@lsp.type.regexp"] = { link = "TSStringRegex" },
            ["@lsp.type.string"] = { link = "TSString" },
            ["@lsp.type.struct"] = { link = "TSType" },
            ["@lsp.type.type"] = { link = "TSType" },
            ["@lsp.type.typeParameter"] = { link = "TSTypeDefinition" },
            ["@lsp.type.variable"] = { link = "TSVariable" },
          }
        end,
      },
    })
    vim.cmd("colorscheme catppuccin-macchiato")
  end,
}
